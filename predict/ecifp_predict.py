import os
from configs.config import model_test_dir, ecifp_lightgbm
import pandas as pd
from util.ECIFP import ECIFP, LIGAND_DESC
import pickle
from tqdm import tqdm
import time


def predict(f_pro, f_lig, model):
    """
    predict on protein-ligand pairs not in pdbbind dataset
    :param f_pro: protein file, .pdb
    :param f_lig: ligand file, .sdf
    :param model: specific model generated by autogluon
    :return:
    """
    ecifp_helper = ECIFP()
    ecifp = ecifp_helper.get_ecifp(f_pro, f_lig, float(6.0))
    ld = ecifp_helper.get_ligand_features_by_file(f_lig)
    m = pickle.load(open(model, 'rb'))
    data = ecifp + list(ld)
    cols = ecifp_helper.get_possible_pl() + LIGAND_DESC
    data_f = pd.DataFrame([data], columns=cols)
    return m.predict(data_f)[0]


def multi_ligd_pred(test_name):
    """
    for extra tests, do estimations on a list of proteins that are not belongs to PDBBind dataset;
    and multiple choices of ligands are matched to one protein
    Caution: file structure of subtest folder should be:
    ├── {test_name}(folder)
        ├── {protein_id}(folder)
            ├── {protein_id}_protein.pdb
            ├── ligs(folder)
                ├── {ligand_name}.sdf
                ├── {ligand_name}.sdf
                ├── ...
        ├── {protein_id}(folder)
            ├── {protein_id}_protein.pdb
            ├── ligs(folder)
                ├── {ligand_name}.sdf
                ├── {ligand_name}.sdf
                ├── ...
        ├── ...
    :param test_name: subtest folder
    :return:
    """
    print("\n")
    ids = os.listdir(os.path.join(model_test_dir, test_name))
    start = time.perf_counter()

    for i in ids:
        preds_ag = []
        lig_name = []
        f_prot = os.path.join(model_test_dir, test_name, "{}\\{}_protein.pdb".format(i, i))
        f_ligs = os.path.join(model_test_dir, test_name, "{}\\ligs".format(i))
        for j in tqdm(os.listdir(f_ligs)):
            f_lig = os.path.join(f_ligs, j)
            pk_ag = predict(f_prot, f_lig, ecifp_lightgbm)
            preds_ag.append(pk_ag)
            lig_name.append(j[:-4])
        df_protein_name = pd.DataFrame([i] * len(lig_name), columns=["protein"])
        df_lig_name = pd.DataFrame(lig_name, columns=["ligand"])
        df_prediction = pd.DataFrame(preds_ag, columns=["prediction"])
        result = df_protein_name.join(df_lig_name.join(df_prediction))
        result.to_csv(os.path.join(model_test_dir, test_name, "{}\\{}_result.csv".format(i, i)))

    end = time.perf_counter()
    print('\n')
    print('run time: {} seconds'.format(round(end - start)))


if __name__ == '__main__':
    multi_ligd_pred("20220829")
